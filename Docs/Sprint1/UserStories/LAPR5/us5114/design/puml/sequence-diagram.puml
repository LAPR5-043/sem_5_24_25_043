@startuml
title Sequence Diagram 
skinparam classAttributeIconSize 0

skinparam class {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor LemonChiffon
    ArrowColor Brown
    BorderColor SaddleBrown
}

skinparam packageStyle rectangle

skinparam card {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor LemonChiffon
    ArrowColor Brown
    BorderColor SaddleBrown
}

actor Admin
participant "Route" as UI
participant "StaffController" as Controller
participant "StaffService" as userS
participant "StaffRepository" as userR
participant "LogService" as LogS
participant "LogRepository" as LogR
participant "Staff" as user
database "DataBase" as db

activate Admin
Admin -> UI: HttpPatch("/isActive/{id}")
activate UI
UI -> Controller:UpdateIsActive(string id)
activate Controller
Controller -> userS : UpdateIsActiveAsync(id, adminEmail)
activate userS
userS -> userR : GetByIdAsync(id)
activate userR 
userR -> db : getById(id)
activate db
db --> userR: staff
deactivate db
userR --> userS: staff
deactivate userR
userS -> user : changeStatus()
activate user
user -> user: status changed
user --> userS 
deactivate user
userS--> userR: UpdateAsync(staff)
activate userR
userR -> db : update(staff)
activate db
db --> userR 
deactivate db
userR --> userS
deactivate userR
userS --> LogS : CreateLogAsync(log, adminEmail)
activate LogS 
LogS --> LogR : AddAsync(log)
activate LogR 
LogR -> db : add(log)
activate db 
db --> LogR 
deactivate db
LogR --> LogS 
deactivate LogR
LogS --> userS 
deactivate LogS
userS --> Controller : true
deactivate userS 
Controller --> UI : true
deactivate Controller 
UI --> Admin : true
deactivate UI
deactivate Admin
















@enduml