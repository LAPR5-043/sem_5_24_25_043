@startuml
hide circle
hide methods
allow_mixing

'skinparam monochrome false
'skinparam packageStyle rectangle
'skinparam shadowing false
'skinparam linetype ortho

' Title
title Domain Model


skinparam classAttributeIconSize 0

skinparam class {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor LemonChiffon
    ArrowColor Brown
    BorderColor SaddleBrown
}

skinparam packageStyle rectangle

skinparam card {
    LifeLineBorderColor DodgerBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor LemonChiffon
    ArrowColor Brown
    BorderColor SaddleBrown
}


' Aggregates

package "Patient Aggregate" {

    entity Patient <<entity>><<root>> {
    }

    card PatientFirstName <<Value Object>>
    card PatientLastName <<Value Object>>
    card PatientFullName <<Value Object>>
    card DateOfBirth <<Value Object>>
    enum Gender <<enumeration>> {
        Male
        Female
    }

    card MedicalRecordNumber <<Value Object>>
    card AllergiesAndConditions <<Value Object>>
    card EmergencyContact <<Value Object>>
    card AppointmentHistory <<Value Object>>
    'card AppointmentHistory <<Value Object>>

    ' Atributos Contact Information
    card PatientEmail <<Value Object>>
    card PhoneNumber <<Value Object>>

    ' Atributos Appointment History
    card AppointmentId <<Value Object>>

    ' Relationships Appointment History
    AppointmentHistory "1" --> "*" AppointmentId 


    ' Relationships inside the Patient aggregate
    Patient "1" -u-> "1" PatientFirstName
    Patient "1" -u-> "1" PatientLastName
    Patient "1" -u-> "1" PatientFullName
    Patient "1" -u-> "1" DateOfBirth
    Patient "1" -u-> "1" Gender
    Patient "1" --> "1" MedicalRecordNumber
    Patient "1" --> "*" AllergiesAndConditions
    Patient "1" --> "1" EmergencyContact
    Patient "1" --> "1" AppointmentHistory
    Patient "1" --> "1" PatientEmail
    Patient "1" --> "1" PhoneNumber

}

package "Staff Aggregate" {

    entity Staff <<entity>><<root>> {
    }

    card StaffID <<Value Object>>
    card StaffFirstName <<Value Object>>
    card StaffLastName <<Value Object>>
    card StaffFullName <<Value Object>>
    card LicenseNumber <<Value Object>>
    card isActives <<Boolean>>

    'specialization é entidade

    card AvailabilitySlots <<Value Object>>
    entity TimeSlots <<Value Object>> {
        StartDate
        EndDate
        Occupied
    }

    ' Atributos Contact Information
    card StaffEmail <<Value Object>>
    card StaffPhoneNumber <<Value Object>>


    'Relationships inside the Staff aggregate
    Staff "1" --> "1" StaffFirstName
    Staff "1" --> "1" StaffLastName
    Staff "1" --> "1" StaffFullName
    Staff "1" -d-> "1" StaffID
    Staff "1" --> "1" LicenseNumber
    Staff "1" --> "1" AvailabilitySlots
    Staff "1" --> "1" isActives
    AvailabilitySlots "1" -d-> "*" TimeSlots
    Staff "1" -d-> "1" StaffEmail
    Staff "1" -d-> "1" StaffPhoneNumber


}

package "Operation Request Aggregate" {

    entity OperationRequest <<entity>><<root>> {
    }

    card ID <<Value Object>>
    card PatientID <<Value Object>>
    card DoctorID <<Value Object>>
    card OperationTypeId <<Value Object>>
    card DeadlineDate <<Value Object>>
    enum Priority <<enumeration>> {
        Elective
        Urgent
        Emergency
    }


    'Relationships
    OperationRequest "1" -d-> "1" ID
    OperationRequest "1" -d-> "1" PatientID
    OperationRequest "1" -d-> "1" DoctorID
    OperationRequest "1" -d-> "1" OperationTypeId
    OperationRequest "1" -d-> "1" DeadlineDate
    OperationRequest "1" -d-> "1" Priority


}

package "Appointment Aggregate" {

    entity Appointment <<entity>><<root>> {
    }

    card AppointmentID <<Value Object>>
    card RequestID <<Value Object>>
    card RoomID <<Value Object>>
    card DateAndTime <<Value Object>>
    enum Status <<enumeration>> {
        Scheduled
        Completed
        Cancelled
    }

    'Relationships
    Appointment "1" --> "1" AppointmentID
    Appointment "1" --> "1" RequestID
    Appointment "1" --> "1" RoomID
    Appointment "1" --> "1" DateAndTime
    Appointment "1" --> "1" Status


}

' Relationships

' US 5.1.3, mas ficou esclarecido que NÃO é o patient que dá book, mas sim o Planning Module
Patient "1" ----> "*" Appointment: books

Staff "*" -d--> "*" OperationRequest: submits and edits

Appointment "*" --> "*" Staff



@enduml
