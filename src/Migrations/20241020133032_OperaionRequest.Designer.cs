// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using src.Models;
using AppContext = src.Models.AppContext;

#nullable disable

namespace sem_5_24_25_043.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20241020133032_OperaionRequest")]
    partial class OperaionRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.OperationRequestAggregate.OperationRequest", b =>
                {
                    b.Property<string>("operationRequestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deadlineDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("doctorID")
                        .HasColumnType("int");

                    b.Property<int>("operationTypeID")
                        .HasColumnType("int");

                    b.Property<int>("patientID")
                        .HasColumnType("int");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.HasKey("operationRequestID");

                    b.ToTable("OperationRequests", (string)null);

                    b.HasData(
                        new
                        {
                            operationRequestID = "337df494-a1dc-4669-9fe5-f04ae12da079",
                            Id = "898816fe-04c9-44f4-861e-1a4d1de6f738",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = 1,
                            operationTypeID = 1,
                            patientID = 1,
                            priority = 2
                        },
                        new
                        {
                            operationRequestID = "9c78b5bc-9649-4416-8e70-7cb775416896",
                            Id = "59a0d98c-af5d-412d-9b84-3ee0c9555408",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = 2,
                            operationTypeID = 2,
                            patientID = 2,
                            priority = 0
                        });
                });

            modelBuilder.Entity("Domain.PatientAggregate.Patient", b =>
                {
                    b.Property<string>("medicalRecordNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("allergiesAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("appointmentHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("emergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("medicalRecordNumber");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("medicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Patients", (string)null);

                    b.HasData(
                        new
                        {
                            medicalRecordNumber = "1",
                            Id = "1",
                            allergiesAndConditions = "[]",
                            appointmentHistory = "{}",
                            dateOfBirth = "1/1/1999",
                            email = "john@email.com",
                            emergencyContact = "{\"name\":\"Jane\",\"phoneNumber\":\"919919919\"}",
                            firstName = "John",
                            fullName = "John Doe",
                            gender = "Male",
                            lastName = "Doe",
                            phoneNumber = "919919919"
                        },
                        new
                        {
                            medicalRecordNumber = "2",
                            Id = "2",
                            allergiesAndConditions = "[]",
                            appointmentHistory = "{}",
                            dateOfBirth = "1/1/1999",
                            email = "Jane@email.com",
                            emergencyContact = "{\"name\":\"Jane\",\"phoneNumber\":\"919999119\"}",
                            firstName = "Jane",
                            fullName = "Jane Does",
                            gender = "Male",
                            lastName = "Does",
                            phoneNumber = "919991919"
                        });
                });

            modelBuilder.Entity("Log", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timestamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("OperationType", b =>
                {
                    b.Property<string>("operationTypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estimatedDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("specializations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("operationTypeName");

                    b.ToTable("OperationTypes", (string)null);

                    b.HasData(
                        new
                        {
                            operationTypeName = "Heart Surgery",
                            Id = "Heart Surgery",
                            estimatedDuration = "3:15",
                            isActive = true,
                            specializations = "{\"Cardiology\":1}"
                        },
                        new
                        {
                            operationTypeName = "Knee Surgery",
                            Id = "Knee Surgery",
                            estimatedDuration = "2:0",
                            isActive = true,
                            specializations = "{\"Orthopedics\":2}"
                        });
                });

            modelBuilder.Entity("Staff", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("availabilitySlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("specializationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staffID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("licenseNumber")
                        .IsUnique();

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Staffs", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
