// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using src.Models;
using AppContext = src.Models.AppContext;

#nullable disable

namespace sem_5_24_25_043.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20241114144043_NewOpTypesAndStaff")]
    partial class NewOpTypesAndStaff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.OperationRequestAggregate.OperationRequest", b =>
                {
                    b.Property<string>("operationRequestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deadlineDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doctorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operationTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patientID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specializations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("operationRequestID");

                    b.ToTable("OperationRequests", (string)null);

                    b.HasData(
                        new
                        {
                            operationRequestID = "000001",
                            Id = "000001",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "D202400001",
                            operationTypeID = "so2",
                            patientID = "1",
                            priority = "Emergency",
                            specializations = "{\"Anesthesist\":[\"D202400021\"]}"
                        });
                });

            modelBuilder.Entity("Domain.PatientAggregate.Patient", b =>
                {
                    b.Property<string>("MedicalRecordNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AllergiesAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppointmentHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MedicalRecordNumber");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Patients", (string)null);

                    b.HasData(
                        new
                        {
                            MedicalRecordNumber = "1",
                            AllergiesAndConditions = "[]",
                            AppointmentHistory = "{}",
                            DateOfBirth = "1/1/1999",
                            Email = "john@email.com",
                            EmergencyContact = "{\"Name\":\"Jane\",\"PhoneNumber\":\"+351919919919\"}",
                            FirstName = "John",
                            FullName = "John Doe",
                            Gender = "Male",
                            Id = "1",
                            LastName = "Doe",
                            PhoneNumber = "+351919919919"
                        },
                        new
                        {
                            MedicalRecordNumber = "2",
                            AllergiesAndConditions = "[]",
                            AppointmentHistory = "{}",
                            DateOfBirth = "1/1/1999",
                            Email = "Jane@email.com",
                            EmergencyContact = "{\"Name\":\"Jane\",\"PhoneNumber\":\"+351919999119\"}",
                            FirstName = "Jane",
                            FullName = "Jane Does",
                            Gender = "Male",
                            Id = "2",
                            LastName = "Does",
                            PhoneNumber = "+351919991919"
                        });
                });

            modelBuilder.Entity("Log", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timestamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("OperationType", b =>
                {
                    b.Property<string>("operationTypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estimatedDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("operationTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specializations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("operationTypeName");

                    b.ToTable("OperationTypes", (string)null);

                    b.HasData(
                        new
                        {
                            operationTypeName = "so2",
                            Id = "so2",
                            estimatedDuration = "anesthesia:45,operation:60,cleaning:45",
                            isActive = true,
                            operationTypeDescription = "Knee Replacement Surgery",
                            specializations = "{\"Doctor_Orthopaedist\":3,\"Doctor_Anaesthetist\":1,\"Nurse_Circulating\":1,\"Nurse_Instrumenting\":1,\"Nurse_Anaesthetist\":1,\"Assistant_Medical_Action\":1}"
                        },
                        new
                        {
                            operationTypeName = "so3",
                            Id = "so3",
                            estimatedDuration = "anesthesia:45,operation:90,cleaning:45",
                            isActive = true,
                            operationTypeDescription = "Shoulder Replacement Surgery",
                            specializations = "{\"Doctor_Orthopaedist\":3,\"Doctor_Anaesthetist\":1,\"Nurse_Circulating\":1,\"Nurse_Instrumenting\":1,\"Nurse_Anaesthetist\":1,\"Assistant_Medical_Action\":1}"
                        },
                        new
                        {
                            operationTypeName = "so4",
                            Id = "so4",
                            estimatedDuration = "anesthesia:45,operation:75,cleaning:45",
                            isActive = true,
                            operationTypeDescription = "Hip Replacement Surgery",
                            specializations = "{\"Doctor_Orthopaedist\":2,\"Doctor_Anaesthetist\":1,\"Nurse_Circulating\":1,\"Nurse_Instrumenting\":1,\"Nurse_Anaesthetist\":1,\"Assistant_Medical_Action\":1}"
                        });
                });

            modelBuilder.Entity("PendingRequest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("attributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("oldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pendingValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("requestID")
                        .IsUnique();

                    b.ToTable("PendingRequests", (string)null);
                });

            modelBuilder.Entity("Staff", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("availabilitySlotsID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("specializationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staffID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("licenseNumber")
                        .IsUnique();

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Staffs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d202400001",
                            availabilitySlotsID = "d202400001",
                            email = "d202400001@medopt.com",
                            firstName = "John",
                            fullName = "John,Doe",
                            isActive = true,
                            lastName = "Doe",
                            licenseNumber = "821322",
                            phoneNumber = "+351912297153",
                            specializationID = "orthopaedist",
                            staffID = "d202400001"
                        },
                        new
                        {
                            Id = "d202400002",
                            availabilitySlotsID = "d202400002",
                            email = "d202400002@medopt.com",
                            firstName = "Jane",
                            fullName = "Jane,Smith",
                            isActive = true,
                            lastName = "Smith",
                            licenseNumber = "805322",
                            phoneNumber = "+351931170255",
                            specializationID = "anaesthetist",
                            staffID = "d202400002"
                        },
                        new
                        {
                            Id = "d202400003",
                            availabilitySlotsID = "d202400003",
                            email = "d202400003@medopt.com",
                            firstName = "Carlos",
                            fullName = "Carlos,Moedas",
                            isActive = true,
                            lastName = "Moedas",
                            licenseNumber = "641149",
                            phoneNumber = "+351939272958",
                            specializationID = "orthopaedist",
                            staffID = "d202400003"
                        },
                        new
                        {
                            Id = "d202400011",
                            availabilitySlotsID = "d202400011",
                            email = "d202400011@medopt.com",
                            firstName = "Maria",
                            fullName = "Maria,Silva",
                            isActive = true,
                            lastName = "Silva",
                            licenseNumber = "858244",
                            phoneNumber = "+351956913062",
                            specializationID = "orthopaedist",
                            staffID = "d202400011"
                        },
                        new
                        {
                            Id = "d202400012",
                            availabilitySlotsID = "d202400012",
                            email = "d202400012@medopt.com",
                            firstName = "Ana",
                            fullName = "Ana,Costa",
                            isActive = true,
                            lastName = "Costa",
                            licenseNumber = "123949",
                            phoneNumber = "+351961716712",
                            specializationID = "orthopaedist",
                            staffID = "d202400012"
                        },
                        new
                        {
                            Id = "d202400023",
                            availabilitySlotsID = "d202400023",
                            email = "d202400023@medopt.com",
                            firstName = "Luis",
                            fullName = "Luis,Martins",
                            isActive = true,
                            lastName = "Martins",
                            licenseNumber = "269233",
                            phoneNumber = "+351993373418",
                            specializationID = "anaesthetist",
                            staffID = "d202400023"
                        },
                        new
                        {
                            Id = "n202400024",
                            availabilitySlotsID = "n202400024",
                            email = "n202400024@medopt.com",
                            firstName = "Pedro",
                            fullName = "Pedro,Gomes",
                            isActive = true,
                            lastName = "Gomes",
                            licenseNumber = "793605",
                            phoneNumber = "+351923936967",
                            specializationID = "anaesthetist",
                            staffID = "n202400024"
                        },
                        new
                        {
                            Id = "n202400029",
                            availabilitySlotsID = "n202400029",
                            email = "n202400029@medopt.com",
                            firstName = "Sara",
                            fullName = "Sara,Ribeiro",
                            isActive = true,
                            lastName = "Ribeiro",
                            licenseNumber = "909177",
                            phoneNumber = "+351923282184",
                            specializationID = "anaesthetist",
                            staffID = "n202400029"
                        },
                        new
                        {
                            Id = "n202400022",
                            availabilitySlotsID = "n202400022",
                            email = "n202400022@medopt.com",
                            firstName = "David",
                            fullName = "David,Fernandes",
                            isActive = true,
                            lastName = "Fernandes",
                            licenseNumber = "588010",
                            phoneNumber = "+351910848568",
                            specializationID = "anaesthetist",
                            staffID = "n202400022"
                        },
                        new
                        {
                            Id = "n202400025",
                            availabilitySlotsID = "n202400025",
                            email = "n202400025@medopt.com",
                            firstName = "Laura",
                            fullName = "Laura,Sousa",
                            isActive = true,
                            lastName = "Sousa",
                            licenseNumber = "421206",
                            phoneNumber = "+351987269308",
                            specializationID = "circulating",
                            staffID = "n202400025"
                        },
                        new
                        {
                            Id = "n202400030",
                            availabilitySlotsID = "n202400030",
                            email = "n202400030@medopt.com",
                            firstName = "John",
                            fullName = "John,Doe",
                            isActive = true,
                            lastName = "Doe",
                            licenseNumber = "390786",
                            phoneNumber = "+351917891154",
                            specializationID = "circulating",
                            staffID = "n202400030"
                        },
                        new
                        {
                            Id = "n202400031",
                            availabilitySlotsID = "n202400031",
                            email = "n202400031@medopt.com",
                            firstName = "Jane",
                            fullName = "Jane,Smith",
                            isActive = true,
                            lastName = "Smith",
                            licenseNumber = "630957",
                            phoneNumber = "+351993471022",
                            specializationID = "circulating",
                            staffID = "n202400031"
                        },
                        new
                        {
                            Id = "n202400026",
                            availabilitySlotsID = "n202400026",
                            email = "n202400026@medopt.com",
                            firstName = "Carlos",
                            fullName = "Carlos,Moedas",
                            isActive = true,
                            lastName = "Moedas",
                            licenseNumber = "512602",
                            phoneNumber = "+351931017743",
                            specializationID = "instrumenting",
                            staffID = "n202400026"
                        },
                        new
                        {
                            Id = "n202400027",
                            availabilitySlotsID = "n202400027",
                            email = "n202400027@medopt.com",
                            firstName = "Maria",
                            fullName = "Maria,Silva",
                            isActive = true,
                            lastName = "Silva",
                            licenseNumber = "483791",
                            phoneNumber = "+351981736171",
                            specializationID = "instrumenting",
                            staffID = "n202400027"
                        },
                        new
                        {
                            Id = "n202400028",
                            availabilitySlotsID = "n202400028",
                            email = "n202400028@medopt.com",
                            firstName = "Ana",
                            fullName = "Ana,Costa",
                            isActive = true,
                            lastName = "Costa",
                            licenseNumber = "992894",
                            phoneNumber = "+351960692470",
                            specializationID = "instrumenting",
                            staffID = "n202400028"
                        },
                        new
                        {
                            Id = "s202400001",
                            availabilitySlotsID = "s202400001",
                            email = "s202400001@medopt.com",
                            firstName = "Luis",
                            fullName = "Luis,Martins",
                            isActive = true,
                            lastName = "Martins",
                            licenseNumber = "932751",
                            phoneNumber = "+351988977448",
                            specializationID = "medical_action",
                            staffID = "s202400001"
                        });
                });

            modelBuilder.Entity("src.Domain.AppointmentAggregate.Appointment", b =>
                {
                    b.Property<string>("appointmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("requestID")
                        .HasColumnType("int");

                    b.Property<string>("roomID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("appointmentID");

                    b.ToTable("Appointments", (string)null);

                    b.HasData(
                        new
                        {
                            appointmentID = "1",
                            Id = "1",
                            dateAndTime = "20241028,720,1200",
                            requestID = 1,
                            roomID = "1",
                            status = "Scheduled"
                        });
                });

            modelBuilder.Entity("src.Domain.AvailabilitySlotAggregate.AvailabilitySlot", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Slots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AvailabilitySlots", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d202400001",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400001"
                        },
                        new
                        {
                            Id = "d202400002",
                            Slots = "{\"20241028\":{\"StartTime\":500,\"EndTime\":1440}}",
                            StaffID = "d202400002"
                        },
                        new
                        {
                            Id = "d202400003",
                            Slots = "{\"20241028\":{\"StartTime\":520,\"EndTime\":1320}}",
                            StaffID = "d202400003"
                        },
                        new
                        {
                            Id = "d202400011",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400011"
                        },
                        new
                        {
                            Id = "d202400012",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400012"
                        },
                        new
                        {
                            Id = "d202400023",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400023"
                        },
                        new
                        {
                            Id = "n202400024",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1300}}",
                            StaffID = "n202400024"
                        },
                        new
                        {
                            Id = "n202400029",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1400}}",
                            StaffID = "n202400029"
                        },
                        new
                        {
                            Id = "n202400022",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400022"
                        },
                        new
                        {
                            Id = "n202400025",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1300}}",
                            StaffID = "n202400025"
                        },
                        new
                        {
                            Id = "n202400030",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1400}}",
                            StaffID = "n202400030"
                        },
                        new
                        {
                            Id = "n202400031",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400031"
                        },
                        new
                        {
                            Id = "n202400026",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400026"
                        },
                        new
                        {
                            Id = "n202400027",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1300}}",
                            StaffID = "n202400027"
                        },
                        new
                        {
                            Id = "n202400028",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400028"
                        },
                        new
                        {
                            Id = "s202400001",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1400}}",
                            StaffID = "s202400001"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
