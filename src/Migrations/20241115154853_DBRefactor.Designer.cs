// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using src.Models;
using AppContext = src.Models.AppContext;

#nullable disable

namespace sem_5_24_25_043.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20241115154853_DBRefactor")]
    partial class DBRefactor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.OperationRequestAggregate.OperationRequest", b =>
                {
                    b.Property<string>("operationRequestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deadlineDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doctorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operationTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patientID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specializations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("operationRequestID");

                    b.ToTable("OperationRequests", (string)null);

                    b.HasData(
                        new
                        {
                            operationRequestID = "1",
                            Id = "1",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "D202400003",
                            operationTypeID = "so3",
                            patientID = "1",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400003\",\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"D202400002\",\"n202400022\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400030\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "2",
                            Id = "2",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "D202400001",
                            operationTypeID = "so2",
                            patientID = "1",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400003\",\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"D202400002\",\"n202400022\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400030\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "3",
                            Id = "3",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400001",
                            operationTypeID = "so4",
                            patientID = "2",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400001\",\"d202400012\"],\"anaesthetist\":[\"n202400024\",\"d202400002\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400025\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "4",
                            Id = "4",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400001",
                            operationTypeID = "so2",
                            patientID = "2",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400001\",\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"d202400002\",\"n202400024\"],\"instrumenting\":[\"n202400027\"],\"circulating\":[\"n202400031\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "5",
                            Id = "5",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400011",
                            operationTypeID = "so4",
                            patientID = "3",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"d202400023\",\"n202400024\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400025\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "6",
                            Id = "6",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400003",
                            operationTypeID = "so2",
                            patientID = "3",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400003\",\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"d202400002\",\"n202400022\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400030\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "7",
                            Id = "7",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400003",
                            operationTypeID = "so3",
                            patientID = "4",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400003\",\"d202400011\",\"d202400001\"],\"anaesthetist\":[\"d202400002\",\"n202400029\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400025\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "8",
                            Id = "8",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400001",
                            operationTypeID = "so4",
                            patientID = "4",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400001\",\"d202400003\",\"d202400012\"],\"anaesthetist\":[\"d202400023\",\"n202400024\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400025\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "9",
                            Id = "9",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400001",
                            operationTypeID = "so2",
                            patientID = "5",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400001\",\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"d202400002\",\"n202400024\"],\"instrumenting\":[\"n202400027\"],\"circulating\":[\"n202400031\"],\"medical_action\":[\"s202400001\"]}"
                        },
                        new
                        {
                            operationRequestID = "10",
                            Id = "10",
                            deadlineDate = "01/01/2025 00:00:00",
                            doctorID = "d202400011",
                            operationTypeID = "so4",
                            patientID = "5",
                            priority = "Emergency",
                            specializations = "{\"orthopaedist\":[\"d202400011\",\"d202400012\"],\"anaesthetist\":[\"d202400023\",\"n202400024\"],\"instrumenting\":[\"n202400026\"],\"circulating\":[\"n202400025\"],\"medical_action\":[\"s202400001\"]}"
                        });
                });

            modelBuilder.Entity("Domain.PatientAggregate.Patient", b =>
                {
                    b.Property<string>("MedicalRecordNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AllergiesAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppointmentHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MedicalRecordNumber");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Patients", (string)null);

                    b.HasData(
                        new
                        {
                            MedicalRecordNumber = "1",
                            AllergiesAndConditions = "[]",
                            AppointmentHistory = "{}",
                            DateOfBirth = "1/1/1999",
                            Email = "john@email.com",
                            EmergencyContact = "{\"Name\":\"Jane\",\"PhoneNumber\":\"+351919919919\"}",
                            FirstName = "John",
                            FullName = "John Doe",
                            Gender = "Male",
                            Id = "1",
                            LastName = "Doe",
                            PhoneNumber = "+351919919919"
                        },
                        new
                        {
                            MedicalRecordNumber = "2",
                            AllergiesAndConditions = "[]",
                            AppointmentHistory = "{}",
                            DateOfBirth = "1/1/1999",
                            Email = "Jane@email.com",
                            EmergencyContact = "{\"Name\":\"Jane\",\"PhoneNumber\":\"+351919999119\"}",
                            FirstName = "Jane",
                            FullName = "Jane Does",
                            Gender = "Male",
                            Id = "2",
                            LastName = "Does",
                            PhoneNumber = "+351919991919"
                        });
                });

            modelBuilder.Entity("Log", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timestamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("OperationType", b =>
                {
                    b.Property<string>("operationTypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estimatedDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("operationTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specializations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("operationTypeName");

                    b.ToTable("OperationTypes", (string)null);

                    b.HasData(
                        new
                        {
                            operationTypeName = "so2",
                            Id = "so2",
                            estimatedDuration = "anesthesia:45,operation:60,cleaning:45",
                            isActive = true,
                            operationTypeDescription = "Knee Replacement Surgery",
                            specializations = "{\"d;orthopaedist\":3,\"d;anaesthetist\":1,\"n;circulating\":1,\"n;instrumenting\":1,\"n;anaesthetist\":1,\"s;medical_action\":1}"
                        },
                        new
                        {
                            operationTypeName = "so3",
                            Id = "so3",
                            estimatedDuration = "anesthesia:45,operation:90,cleaning:45",
                            isActive = true,
                            operationTypeDescription = "Shoulder Replacement Surgery",
                            specializations = "{\"d;orthopaedist\":3,\"d;anaesthetist\":1,\"n;circulating\":1,\"n;instrumenting\":1,\"n;anaesthetist\":1,\"s;medical_action\":1}"
                        },
                        new
                        {
                            operationTypeName = "so4",
                            Id = "so4",
                            estimatedDuration = "anesthesia:45,operation:75,cleaning:45",
                            isActive = true,
                            operationTypeDescription = "Hip Replacement Surgery",
                            specializations = "{\"d;orthopaedist\":2,\"d;anaesthetist\":1,\"n;circulating\":1,\"n;instrumenting\":1,\"n;anaesthetist\":1,\"s;medical_action\":1}"
                        });
                });

            modelBuilder.Entity("PendingRequest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("attributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("oldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pendingValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("requestID")
                        .IsUnique();

                    b.ToTable("PendingRequests", (string)null);
                });

            modelBuilder.Entity("Specialization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("specializationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specializationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "orthopaedist",
                            specializationDescription = "Orthopaedist",
                            specializationName = "orthopaedist"
                        },
                        new
                        {
                            Id = "anaesthetist",
                            specializationDescription = "Anaesthetist",
                            specializationName = "anaesthetist"
                        },
                        new
                        {
                            Id = "instrumenting",
                            specializationDescription = "Instrumenting",
                            specializationName = "instrumenting"
                        },
                        new
                        {
                            Id = "circulating",
                            specializationDescription = "Circulating",
                            specializationName = "circulating"
                        },
                        new
                        {
                            Id = "medical_action",
                            specializationDescription = "Medical Action",
                            specializationName = "medical_action"
                        });
                });

            modelBuilder.Entity("Staff", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("availabilitySlotsID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("specializationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staffID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("licenseNumber")
                        .IsUnique();

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Staffs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d202400001",
                            availabilitySlotsID = "d202400001",
                            email = "d202400001@medopt.com",
                            firstName = "John",
                            fullName = "John,Doe",
                            isActive = true,
                            lastName = "Doe",
                            licenseNumber = "120977",
                            phoneNumber = "+351919969079",
                            specializationID = "orthopaedist",
                            staffID = "d202400001"
                        },
                        new
                        {
                            Id = "d202400002",
                            availabilitySlotsID = "d202400002",
                            email = "d202400002@medopt.com",
                            firstName = "Jane",
                            fullName = "Jane,Smith",
                            isActive = true,
                            lastName = "Smith",
                            licenseNumber = "483193",
                            phoneNumber = "+351926984756",
                            specializationID = "anaesthetist",
                            staffID = "d202400002"
                        },
                        new
                        {
                            Id = "d202400003",
                            availabilitySlotsID = "d202400003",
                            email = "d202400003@medopt.com",
                            firstName = "Carlos",
                            fullName = "Carlos,Moedas",
                            isActive = true,
                            lastName = "Moedas",
                            licenseNumber = "346698",
                            phoneNumber = "+351925513617",
                            specializationID = "orthopaedist",
                            staffID = "d202400003"
                        },
                        new
                        {
                            Id = "d202400011",
                            availabilitySlotsID = "d202400011",
                            email = "d202400011@medopt.com",
                            firstName = "Maria",
                            fullName = "Maria,Silva",
                            isActive = true,
                            lastName = "Silva",
                            licenseNumber = "505298",
                            phoneNumber = "+351999896835",
                            specializationID = "orthopaedist",
                            staffID = "d202400011"
                        },
                        new
                        {
                            Id = "d202400012",
                            availabilitySlotsID = "d202400012",
                            email = "d202400012@medopt.com",
                            firstName = "Ana",
                            fullName = "Ana,Costa",
                            isActive = true,
                            lastName = "Costa",
                            licenseNumber = "962442",
                            phoneNumber = "+351985090683",
                            specializationID = "orthopaedist",
                            staffID = "d202400012"
                        },
                        new
                        {
                            Id = "d202400023",
                            availabilitySlotsID = "d202400023",
                            email = "d202400023@medopt.com",
                            firstName = "Luis",
                            fullName = "Luis,Martins",
                            isActive = true,
                            lastName = "Martins",
                            licenseNumber = "969490",
                            phoneNumber = "+351913589038",
                            specializationID = "anaesthetist",
                            staffID = "d202400023"
                        },
                        new
                        {
                            Id = "n202400024",
                            availabilitySlotsID = "n202400024",
                            email = "n202400024@medopt.com",
                            firstName = "Pedro",
                            fullName = "Pedro,Gomes",
                            isActive = true,
                            lastName = "Gomes",
                            licenseNumber = "732158",
                            phoneNumber = "+351997068302",
                            specializationID = "anaesthetist",
                            staffID = "n202400024"
                        },
                        new
                        {
                            Id = "n202400029",
                            availabilitySlotsID = "n202400029",
                            email = "n202400029@medopt.com",
                            firstName = "Sara",
                            fullName = "Sara,Ribeiro",
                            isActive = true,
                            lastName = "Ribeiro",
                            licenseNumber = "189991",
                            phoneNumber = "+351956801218",
                            specializationID = "anaesthetist",
                            staffID = "n202400029"
                        },
                        new
                        {
                            Id = "n202400022",
                            availabilitySlotsID = "n202400022",
                            email = "n202400022@medopt.com",
                            firstName = "David",
                            fullName = "David,Fernandes",
                            isActive = true,
                            lastName = "Fernandes",
                            licenseNumber = "827134",
                            phoneNumber = "+351935853852",
                            specializationID = "anaesthetist",
                            staffID = "n202400022"
                        },
                        new
                        {
                            Id = "n202400025",
                            availabilitySlotsID = "n202400025",
                            email = "n202400025@medopt.com",
                            firstName = "Laura",
                            fullName = "Laura,Sousa",
                            isActive = true,
                            lastName = "Sousa",
                            licenseNumber = "573591",
                            phoneNumber = "+351925128348",
                            specializationID = "circulating",
                            staffID = "n202400025"
                        },
                        new
                        {
                            Id = "n202400030",
                            availabilitySlotsID = "n202400030",
                            email = "n202400030@medopt.com",
                            firstName = "John",
                            fullName = "John,Doe",
                            isActive = true,
                            lastName = "Doe",
                            licenseNumber = "235809",
                            phoneNumber = "+351992568449",
                            specializationID = "circulating",
                            staffID = "n202400030"
                        },
                        new
                        {
                            Id = "n202400031",
                            availabilitySlotsID = "n202400031",
                            email = "n202400031@medopt.com",
                            firstName = "Jane",
                            fullName = "Jane,Smith",
                            isActive = true,
                            lastName = "Smith",
                            licenseNumber = "447358",
                            phoneNumber = "+351952016886",
                            specializationID = "circulating",
                            staffID = "n202400031"
                        },
                        new
                        {
                            Id = "n202400026",
                            availabilitySlotsID = "n202400026",
                            email = "n202400026@medopt.com",
                            firstName = "Carlos",
                            fullName = "Carlos,Moedas",
                            isActive = true,
                            lastName = "Moedas",
                            licenseNumber = "158355",
                            phoneNumber = "+351911672308",
                            specializationID = "instrumenting",
                            staffID = "n202400026"
                        },
                        new
                        {
                            Id = "n202400027",
                            availabilitySlotsID = "n202400027",
                            email = "n202400027@medopt.com",
                            firstName = "Maria",
                            fullName = "Maria,Silva",
                            isActive = true,
                            lastName = "Silva",
                            licenseNumber = "438404",
                            phoneNumber = "+351956097020",
                            specializationID = "instrumenting",
                            staffID = "n202400027"
                        },
                        new
                        {
                            Id = "n202400028",
                            availabilitySlotsID = "n202400028",
                            email = "n202400028@medopt.com",
                            firstName = "Ana",
                            fullName = "Ana,Costa",
                            isActive = true,
                            lastName = "Costa",
                            licenseNumber = "711982",
                            phoneNumber = "+351976738004",
                            specializationID = "instrumenting",
                            staffID = "n202400028"
                        },
                        new
                        {
                            Id = "s202400001",
                            availabilitySlotsID = "s202400001",
                            email = "s202400001@medopt.com",
                            firstName = "Luis",
                            fullName = "Luis,Martins",
                            isActive = true,
                            lastName = "Martins",
                            licenseNumber = "142277",
                            phoneNumber = "+351928886685",
                            specializationID = "medical_action",
                            staffID = "s202400001"
                        });
                });

            modelBuilder.Entity("src.Domain.AppointmentAggregate.Appointment", b =>
                {
                    b.Property<string>("appointmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("requestID")
                        .HasColumnType("int");

                    b.Property<string>("roomID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("appointmentID");

                    b.ToTable("Appointments", (string)null);

                    b.HasData(
                        new
                        {
                            appointmentID = "1",
                            Id = "1",
                            dateAndTime = "20241028,720,1200",
                            requestID = 1,
                            roomID = "or1",
                            status = "Scheduled"
                        });
                });

            modelBuilder.Entity("src.Domain.AvailabilitySlotAggregate.AvailabilitySlot", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Slots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AvailabilitySlots", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d202400001",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400001"
                        },
                        new
                        {
                            Id = "d202400002",
                            Slots = "{\"20241028\":{\"StartTime\":500,\"EndTime\":1440}}",
                            StaffID = "d202400002"
                        },
                        new
                        {
                            Id = "d202400003",
                            Slots = "{\"20241028\":{\"StartTime\":520,\"EndTime\":1320}}",
                            StaffID = "d202400003"
                        },
                        new
                        {
                            Id = "d202400011",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400011"
                        },
                        new
                        {
                            Id = "d202400012",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400012"
                        },
                        new
                        {
                            Id = "d202400023",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "d202400023"
                        },
                        new
                        {
                            Id = "n202400024",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1300}}",
                            StaffID = "n202400024"
                        },
                        new
                        {
                            Id = "n202400029",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1400}}",
                            StaffID = "n202400029"
                        },
                        new
                        {
                            Id = "n202400022",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400022"
                        },
                        new
                        {
                            Id = "n202400025",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1300}}",
                            StaffID = "n202400025"
                        },
                        new
                        {
                            Id = "n202400030",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1400}}",
                            StaffID = "n202400030"
                        },
                        new
                        {
                            Id = "n202400031",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400031"
                        },
                        new
                        {
                            Id = "n202400026",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400026"
                        },
                        new
                        {
                            Id = "n202400027",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1300}}",
                            StaffID = "n202400027"
                        },
                        new
                        {
                            Id = "n202400028",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1200}}",
                            StaffID = "n202400028"
                        },
                        new
                        {
                            Id = "s202400001",
                            Slots = "{\"20241028\":{\"StartTime\":480,\"EndTime\":1400}}",
                            StaffID = "s202400001"
                        });
                });

            modelBuilder.Entity("src.Domain.SurgeryRoomAggregate.SurgeryRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurgeryRooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "or1",
                            Name = "Orthopedic Surgery Room 1",
                            RoomID = "or1"
                        },
                        new
                        {
                            Id = "or2",
                            Name = "Orthopedic Surgery Room 2",
                            RoomID = "or2"
                        },
                        new
                        {
                            Id = "or3",
                            Name = "Orthopedic Surgery Room 3",
                            RoomID = "or3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
